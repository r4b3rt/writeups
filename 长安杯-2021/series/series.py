from Crypto.Util.number import *
from gmpy2 import next_prime
from functools import reduce
from secret import *
import random

def F(x):
    if (x<4):
        return 1
    return F(x-1)+F(x-2)+F(x-3)

m = bytes_to_long(flag)
e = random.getrandbits(250)
p = getPrime(1001)
q = getPrime(1001)
k = e**e
s = reduce(lambda a, b: a*b, [F(k+i) % e for i in range(1,5)]) + F(2021**k)**4
p = next_prime(s)
c = pow(m,e,p)
print(e)
print(c)
#1292991588783542706506728336494377723983115217051171962646571511384590134899
#229797522574801936576076488492034448896863980731763047709941641260180597290800402814069755381965565755866855389082787759443816945304000719176334587540293777658369250939545994974691382505993209963323032684771922094686136104097942892330051349688373437571196103392801691879287264056022383484359551333197
