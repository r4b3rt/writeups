#!/usr/bin/env python
import gmpy2
import sympy
import libnum
#A=(((y%x)**5)%(x%y))**2019+y**316+(y+1)/x
A=2683349182678714524247469512793476009861014781004924905484127480308161377768192868061561886577048646432382128960881487463427414176114486885830693959404989743229103516924432512724195654425703453612710310587164417035878308390676612592848750287387318129424195208623440294647817367740878211949147526287091298307480502897462279102572556822231669438279317474828479089719046386411971105448723910594710418093977044179949800373224354729179833393219827789389078869290217569511230868967647963089430594258815146362187250855166897553056073744582946148472068334167445499314471518357535261186318756327890016183228412253724
f=lambda x,y:(((y%x)**5)%(x%y))**2019+y**316+(y+1)/x
for i in range(100):
    for j in range(100):
        try:
            if f(i,j)==A:
                print i,j
        except Exception:
            continue
x=2
y=83
#p=next_prime(z*x*y)
#q=next_prime(z)
n=117930806043507374325982291823027285148807239117987369609583515353889814856088099671454394340816761242974462268435911765045576377767711593100416932019831889059333166946263184861287975722954992219766493089630810876984781113645362450398009234556085330943125568377741065242183073882558834603430862598066786475299918395341014877416901185392905676043795425126968745185649565106322336954427505104906770493155723995382318346714944184577894150229037758434597242564815299174950147754426950251419204917376517360505024549691723683358170823416757973059354784142601436519500811159036795034676360028928301979780528294114933347127
z=842868045681390934539739959201847552284980179958879667933078453950968566151662147267006293571765463137270594151138695778986165111380428806545593588078365331313084230014618714412959584843421586674162688321942889369912392031882620994944241987153078156389470370195514285850736541078623854327959382156753457477
start=z#gmpy2.iroot(n/x/y,2)[0]
while True:
    p=sympy.nextprime(start*x*y)
    q=sympy.nextprime(start)
    n_=p*q
    #print n_
    if n_==n:
        print start
        z=start
        break
    print n_-n
    start -= 1
#z=842868045681390934539739959201847552284980179958879667933078453950968566151662147267006293571765463137270594151138695778986165111380428806545593588078365331313084230014618714412959584843421586674162688321942889369912392031882620994944241987153078156389470370195514285850736541078623854327959382156753457477
p=sympy.nextprime(z*x*y)
q=sympy.nextprime(z)
assert(p*q==n)
c=21637349983376240298781643137017527643006420437956416224341194119376827720906813134837051662331110800533726249916480511461651883091547167072238889133223663294552334442051093640989347891754536977519831106118699250847317797879843851255826918152121510988443260626502258826108177049550321258420523982587818065892584009185540294356508050406622208242619887465832495988412605479326659942708790414892644525081859890294893951328910205466191795443278975666713957632984396458370561861108820821299355143041504204271934655444506866309772339580031558766661592776211084022129268334078625159825028582506422947933620995804155386524
e=0x10001
d=gmpy2.invert(e,(p-1)*(q-1))
m=gmpy2.powmod(c,d,n)
print libnum.n2s(m)
